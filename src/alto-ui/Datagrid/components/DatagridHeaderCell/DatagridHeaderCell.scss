@import '../../../scss/inc';

.DatagridHeaderCell {
  min-height: $height-datagrid-header-default;
  flex-shrink: 0;
  text-align: left;
  border-bottom: 1px solid $coolgrey-20;
  font-weight: $font-weight-semibold;
  font-size: $font-size-small;
  text-transform: uppercase;
  display: flex;
  align-items: center;
  line-height: 1;
  background-color: $white;

  &:not(.DatagridHeaderCell--last) {
    box-shadow: inset -1px 0 0 0 $coolgrey-20;
  }

  &--first-row {
    border-top: 1px solid $coolgrey-20;
  }

  &--first-in-row {
    border-left: 1px solid $coolgrey-20;
    border-bottom-left-radius: $border-radius-default;

    &.DatagridHeaderCell--first-row {
      border-top-left-radius: $border-radius-default;
    }
  }

  &--last-in-row {
    border-right: 1px solid $coolgrey-20;
    border-bottom-right-radius: $border-radius-default;

    &.DatagridHeaderCell--first-row {
      border-top-right-radius: $border-radius-default;
    }
  }

  &--sortable {
    &:hover {
      background-color: $blue-10;
    }
  }
}

.DatagridHeaderCell__content {
  @extend %reset-button;
  white-space: nowrap;
  text-overflow: ellipsis;
  padding: $spacing-xx-small 0.625rem;
  flex: 1;
  padding-right: 0.75rem;
  text-align: left;
  display: flex;
  flex-direction: row;
  align-items: flex-start;

  .Datagrid--compact & {
    padding-top: 0.375rem;
    padding-bottom: 0.375rem;
  }

  .Datagrid--comfortable & {
    padding-top: 0.75rem;
    padding-bottom: 0.75rem;
  }

  &--button {
    @extend %reset-button;
    width: 100%;
    transition: all $transition;
    display: flex;
    align-items: center;
    cursor: pointer;
  }
}

.DatagridHeaderCell__title {
  width: calc(100% - 0px);
  max-width: calc(100% - 0px);
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
  flex: 1 1 auto;
  line-height: 1.2;
  max-height: calc(5em * 1.2); // max height => 5 lines

  &--sortable {
    width: calc(100% - calc(2rem - 12px));
    max-width: calc(100% - calc(2rem - 12px));
  }

  &--wrapped {
    white-space: normal;
    word-break: break-word;
  }

  .Datagrid--compact & {
    width: calc(100% - calc(1.5rem - 12px));
    max-width: calc(100% - calc(1.5rem - 12px));
  }

  .DatagridHeaderCell--sorted & {
    color: $blue;
  }
}

.DatagridHeaderCell__sortable-icons {
  opacity: 0;
  transition: $duration-quick $timing-function opacity;
  display: flex;
  flex-direction: column;
  font-size: $font-size-x-small;
  padding-left: 0.5rem;
  line-height: 0;
  flex: 0 0 auto;
}

.DatagridHeaderCell__icon {
  color: $coolgrey-30;

  &--active {
    color: $blue;
  }
}

.DatagridHeaderCell__icon--filter {
  margin-right: $spacing-x-small;

  .DatagridHeaderCell--filtered & {
    color: $blue;
  }
}

.DatagridHeaderCell--sortable {
  padding: 0;

  &:hover .DatagridHeaderCell__sortable-icons {
    opacity: 1;
  }
}

.DatagridHeaderCell--sorted .DatagridHeaderCell__sortable-icons {
  opacity: 1;
}

.DatagridHeaderCell__resize-handle {
  width: 0;
  height: 100%;
  position: relative;
  opacity: 0;
  cursor: col-resize;

  &:hover {
    opacity: 1;
  }

  &::before {
    content: '';
    position: absolute;
    width: 6px;
    height: 100%;
    left: -3px;
    top: 0;
    background-color: $coolgrey-20;
  }
}
